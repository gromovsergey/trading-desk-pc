
javax.validation.constraints.AssertFalse.message = \u0434\u043E\u043B\u0436\u043D\u043E \u0431\u044B\u0442\u044C false
javax.validation.constraints.AssertTrue.message  = \u0434\u043E\u043B\u0436\u043D\u043E \u0431\u044B\u0442\u044C true
javax.validation.constraints.DecimalMax.message  = \u0434\u043E\u043B\u0436\u043D\u043E \u0431\u044B\u0442\u044C \u043C\u0435\u043D\u044C\u0448\u0435 ${inclusive == true ? '\u0438\u043B\u0438 \u0440\u0430\u0432\u043D\u043E ' : ''}{value}
javax.validation.constraints.DecimalMin.message  = \u0434\u043E\u043B\u0436\u043D\u043E \u0431\u044B\u0442\u044C \u0431\u043E\u043B\u044C\u0448\u0435 ${inclusive == true ? '\u0438\u043B\u0438 \u0440\u0430\u0432\u043D\u043E ' : ''}{value}
javax.validation.constraints.Digits.message      = \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u0432\u043D\u0435 \u0434\u0438\u0430\u043F\u0430\u0437\u043E\u043D\u0430 (\u043E\u0436\u0438\u0434\u0430\u0435\u0442\u0441\u044F <{integer} digits>.<{fraction} digits>)
javax.validation.constraints.Future.message      = \u0434\u043E\u043B\u0436\u043D\u043E \u0431\u044B\u0442\u044C \u0432 \u0431\u0443\u0434\u0443\u0449\u0435\u043C
javax.validation.constraints.Max.message         = \u0434\u043E\u043B\u0436\u043D\u043E \u0431\u044B\u0442\u044C \u043C\u0435\u043D\u044C\u0448\u0435 \u0438\u043B\u0438 \u0440\u0430\u0432\u043D\u043E {value}
javax.validation.constraints.Min.message         = \u0434\u043E\u043B\u0436\u043D\u043E \u0431\u044B\u0442\u044C \u0431\u043E\u043B\u044C\u0448\u0435 \u0438\u043B\u0438 \u0440\u0430\u0432\u043D\u043E {value}
javax.validation.constraints.NotNull.message     = \u043D\u0435 \u0434\u043E\u043B\u0436\u043D\u043E \u0431\u044B\u0442\u044C \u043F\u0443\u0441\u0442\u044B\u043C
javax.validation.constraints.Null.message        = \u0434\u043E\u043B\u0436\u043D\u043E \u0431\u044B\u0442\u044C \u043F\u0443\u0441\u0442\u044B\u043C
javax.validation.constraints.Past.message        = \u0434\u043E\u043B\u0436\u043D\u043E \u0431\u044B\u0442\u044C \u0432 \u043F\u0440\u043E\u0448\u043B\u043E\u043C
javax.validation.constraints.Pattern.message     = \u0434\u043E\u043B\u0436\u043D\u043E \u0441\u043E\u043E\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u043E\u0432\u0430\u0442\u044C \u0440\u0435\u0433\u0443\u043B\u044F\u0440\u043D\u043E\u043C\u0443 \u0432\u044B\u0440\u0430\u0436\u0435\u043D\u0438\u044E "{regexp}"
javax.validation.constraints.Size.message        = \u043E\u0436\u0438\u0434\u0430\u0435\u0442\u0441\u044F \u0440\u0430\u0437\u043C\u0435\u0440 \u043C\u0435\u0436\u0434\u0443 {min} \u0438 {max}

org.hibernate.validator.constraints.CreditCardNumber.message        = \u043D\u0435\u043F\u0440\u0430\u0432\u0438\u043B\u044C\u043D\u044B\u0439 \u043D\u043E\u043C\u0435\u0440 \u043A\u0440\u0435\u0434\u0438\u0442\u043D\u043E\u0439 \u043A\u0430\u0440\u0442\u044B
org.hibernate.validator.constraints.EAN.message                   = \u043D\u0435\u043F\u0440\u0430\u0432\u0438\u043B\u044C\u043D\u044B\u0439 {type} barcode
org.hibernate.validator.constraints.Email.message                   = \u043D\u0435\u043A\u043E\u0440\u0440\u0435\u043A\u0442\u043D\u044B\u0439 email \u0430\u0434\u0440\u0435\u0441
org.hibernate.validator.constraints.Length.message                  = \u043E\u0436\u0438\u0434\u0430\u0435\u0442\u0441\u044F \u0434\u043B\u0438\u043D\u0430 \u043C\u0435\u0436\u0434\u0443 {min} \u0438 {max}
org.hibernate.validator.constraints.LuhnCheck.message               = The check digit for ${validatedValue} is invalid, Luhn Modulo 10 checksum failed
org.hibernate.validator.constraints.Mod10Check.message              = The check digit for ${validatedValue} is invalid, Modulo 10 checksum failed
org.hibernate.validator.constraints.Mod11Check.message              = The check digit for ${validatedValue} is invalid, Modulo 11 checksum failed
org.hibernate.validator.constraints.ModCheck.message                = The check digit for ${validatedValue} is invalid, ${modType} checksum failed
org.hibernate.validator.constraints.NotBlank.message                = \u043D\u0435 \u0434\u043E\u043B\u0436\u043D\u043E \u0431\u044B\u0442\u044C \u043F\u0443\u0441\u0442\u044B\u043C
org.hibernate.validator.constraints.NotEmpty.message                = \u043D\u0435 \u0434\u043E\u043B\u0436\u043D\u043E \u0431\u044B\u0442\u044C \u043F\u0443\u0441\u0442\u044B\u043C
org.hibernate.validator.constraints.ParametersScriptAssert.message  = \u0432\u044B\u0440\u0430\u0436\u0435\u043D\u0438\u0435 \u0441\u043A\u0440\u0438\u043F\u0442\u0430 "{script}" \u043D\u0435 \u0440\u0430\u0432\u043D\u043E true
org.hibernate.validator.constraints.Range.message                   = \u0434\u043E\u043B\u0436\u043D\u043E \u0431\u044B\u0442\u044C \u043C\u0435\u0436\u0434\u0443 {min} \u0438 {max}
org.hibernate.validator.constraints.SafeHtml.message                = \u043C\u043E\u0436\u0435\u0442 \u0441\u043E\u0434\u0435\u0440\u0436\u0430\u0442\u044C \u043D\u0435\u0431\u0435\u0437\u043E\u043F\u0430\u0441\u043D\u044B\u0439 html \u043A\u043E\u043D\u0442\u0435\u043D\u0442
org.hibernate.validator.constraints.ScriptAssert.message            = \u0432\u044B\u0440\u0430\u0436\u0435\u043D\u0438\u0435 \u0441\u043A\u0440\u0438\u043F\u0442\u0430 "{script}" \u043D\u0435 \u0440\u0430\u0432\u043D\u043E true
org.hibernate.validator.constraints.URL.message                     = \u0434\u043E\u043B\u0436\u043D\u043E \u0431\u044B\u0442\u044C \u043A\u043E\u0440\u0440\u0435\u043A\u0442\u043D\u044B\u043C URL

org.hibernate.validator.constraints.br.CNPJ.message                 = \u043D\u0435\u043F\u0440\u0430\u0432\u0438\u043B\u044C\u043D\u044B\u0439 CNPJ
org.hibernate.validator.constraints.br.CPF.message                  = \u043D\u0435\u043F\u0440\u0430\u0432\u0438\u043B\u044C\u043D\u044B\u0439 CPF
org.hibernate.validator.constraints.br.TituloEleitoral.message      = \u043D\u0435\u043F\u0440\u0430\u0432\u0438\u043B\u044C\u043D\u044B\u0439 \u043D\u043E\u043C\u0435\u0440 Brazilian Voter ID card
