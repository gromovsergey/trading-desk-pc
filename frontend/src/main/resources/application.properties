envinronmentId=1

# RS Client Configuration
foros.api.url=
foros.api.userToken=
foros.api.key=

# Web Server Configuration
server.port=55080
# maxHttpPostSize = 15 MB, see also {spring.http.multipart.max-file-size, spring.http.multipart.max-request-size}
server.maxHttpPostSize=15728640
# To enable SSL please uncomment
#server.port=55443
# Certificate for test purposes only
#server.ssl.key-store=classpath:certificate/keystore.p12
#server.ssl.key-store-password=adserver
#server.ssl.keyStoreType=PKCS12

# Servlet config
# Post Size = 10 MB, must be less than {server.maxHttpPostSize}
spring.http.multipart.max-file-size=10240KB
spring.http.multipart.max-request-size=10240KB

# Application Async Worker Pool Configuration
appworker.corePoolSize=1
appworker.maxPoolSize=2
appworker.queueSize=100

# Data Source Configuration
datasource.driverClassName=org.postgresql.Driver
datasource.url=
datasource.username=
datasource.password=
# To avoid very-very long start up (please see http://stackoverflow.com/questions/10075081/hibernate-slow-to-acquire-postgres-connection)
datasource.hibernate.useJdbcMetadata=false
datasource.minIdlePoolSize=5
datasource.maxPoolSize=10
datasource.initSql=SET statement_timeout TO 600000
datasource.connectionTestQuery=select generate_series(1,1)
datasource.queryTimeout=600000

# Stat Data Source Configuration
statdata.datasource.driverClassName=${datasource.driverClassName}
statdata.datasource.url=${datasource.url}
statdata.datasource.username=${datasource.username}
statdata.datasource.password=${datasource.password}
statdata.datasource.minIdlePoolSize=${datasource.minIdlePoolSize}
statdata.datasource.maxPoolSize=${datasource.maxPoolSize}
statdata.datasource.initSql=${datasource.initSql}
statdata.datasource.connectionTestQuery=${datasource.connectionTestQuery}
statdata.datasource.queryTimeout=${datasource.queryTimeout}

# Big Data Source Configuration
bigdata.datasource.available=false
bigdata.datasource.driverClassName=ru.yandex.clickhouse.ClickHouseDriver
bigdata.datasource.url=
bigdata.datasource.username=
bigdata.datasource.password=
bigdata.datasource.minIdlePoolSize=1
bigdata.datasource.maxPoolSize=10
bigdata.datasource.connectionTestQuery=select 1
bigdata.datasource.queryTimeout=1200000

# LDAP Configuration
ldap.ldapBaseDn=
ldap.ldapDirectory=
ldap.ldapConnectionTimeout=30000

# General Application Configuration
web.useProdMode=false
web.restBaseUrl=//localhost:${server.port}
web.enableCrossOrigin=true
web.crossOriginDomains=*
web.angularBaseUrl=${web.restBaseUrl}

conversion.pixel.code=<script type="text/javascript">\n(window['PSconv'] || (window['PSconv']=[])).push({'aid':##ADVID##, 'convid':##CONVERSION_ID##, 'value':'', 'orderid':''});</script>\n<script type="text/javascript" charset="UTF-8" src="##CONVERSION_DOMAIN##/tag/conv.js" async=""></script>

usersession.timeoutInMinutes=120
usersession.maxPasswordWrongAttempts=10
usersession.userBlockPeriodInMinutes=10

backend.readOnlyAccessMode=false
backend.externalChannelSources=
backend.ownChannelSource=

spring.jpa.open-in-view=false

# Static resources
staticresource.url=
staticresource.creativesPath=creatives
staticresource.agentReport.configPath=app/programmatic/ui/agentreport/pdf/config/userConfig.xml

# Mail
spring.mail.host=
spring.mail.port=25
spring.mail.username=
spring.mail.password=
mail.from=
mail.blacklistedSenders=
# Report
report.theStartOfHistory=2000-01-01
# Agent Report
agentReport.startDate=01/2017
agentReport.currencyAccuracy=2
# Recaptcha
recaptcha.secretKey=nokey
invitaion.checkCaptcha=false

## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB
## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
file.upload-dir=/tmp/creatives

#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true
##If want to see very extensive logging
#spring.jpa.properties.hibernate.generate_statistics=true
#logging.level.org.hibernate.SQL=DEBUG
##logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

logging.pattern.console=%d{HH:mm:ss.SSS} %highlight(%-5level) %cyan(%class{50}.%M:%L) - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n
logging.level.root=WARN
logging.level.app.programmatic.ui=INFO
logging.file.name=logs/application.log

#flight dashboard limit day
flight.start-days-ago-limit=7
